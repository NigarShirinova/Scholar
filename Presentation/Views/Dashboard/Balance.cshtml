@using Business.ViewModels.TeacherDashboard
@model BalanceIndexVM

<!-- Main Content -->
<div class="balance-content">
    <header class="header">
        <h1>Balance</h1>
    </header>

    <div class="balance-container">
        <div class="card">
            <h2>Your Current Balance</h2>
            <p class="balance-amount">$@Model.Balance.ToString("0.00")</p>

            <!-- Balance Increase Form -->
            <form asp-action="IncreaseBalance" asp-controller="Payment" method="post">
                <input class="form-input" style="border-radius: 30px; padding: 10px; font-size: 16px; border: none; background-color: lightgray ; width:25%" type="number" name="amount" placeholder="Enter Amount" required min="1" step="0.01" />
                <button type="submit" class="button">Increase Your Balance</button>
            </form>
        </div>

        <div class="card">
            <h2>Withdrawable Money</h2>
            <p class="balance-amount">$@Model.Balance.ToString("0.00")</p>

            <!-- Withdraw Form -->
            <form asp-action="WithdrawBalance" asp-controller="Payment" method="post">
                <input class="form-input" style="border-radius: 30px; padding: 10px; font-size: 16px; border: none; background-color: lightgray; width:25% " type="number" name="amount" placeholder="Enter Amount" required min="1" step="0.01" />
                <button type="submit" class="button">Withdraw Money</button>
            </form>
        </div>
    </div>

    <table class="transaction-table">
        <tr>
            <th>Date</th>
            <th>Time</th>
            <th>Amount</th>
            <th>Status</th>
        </tr>

        @if (Model.TransactionList != null && Model.TransactionList.Any())
        {
            foreach (var transaction in Model.TransactionList)
            {
                <tr>
                    <td>@transaction.DateTime.ToString("yyyy-MM-dd")</td>
                    <td>@transaction.DateTime.ToString("HH:mm")</td>
                    <td>$@transaction.Amount.ToString("0.00")</td>
                    <td style="color: @(transaction.TransactionType == Common.Constants.TransactionType.Income ? "rgb(1, 86, 1)" : "rgb(162, 3, 3)"); font-weight: bold;">
                        @transaction.TransactionType
                    </td>
                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="4" style="text-align: center;">No transactions found.</td>
            </tr>
        }
    </table>
</div>

<!-- Scripts (unchanged as requested) -->
<script src="https://js.stripe.com/v3/"></script>
<script>
    document.querySelector("form").addEventListener("submit", async function (event) {
        event.preventDefault();
        let amount = document.querySelector("input[name='amount']").value;

        const response = await fetch('/Payment/IncreaseBalance', {
            method: 'POST',
            headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
            body: new URLSearchParams({ amount: amount })
        });

        const result = await response.json();
        if (result.id) {
            const stripe = Stripe("pk_test_51R037cIISdgp6SJ3h1q0zKlI1N8cPpDglpB51usTUMgppe3HC77CmBkNWWktC3E4JE1VjbtUxJjcpsICWGJIRjy200bjUDt4qc");
            stripe.redirectToCheckout({ sessionId: result.id });
        } else {
            alert("Payment failed: " + (result.error || "Unknown error"));
        }
    });
</script>

<script>
    document.querySelector("form").addEventListener("submit", async function (event){
        let amount = document.querySelector("input[name='amount']").value;

        if (!amount || amount <= 0) {
            alert("Enter a valid amount to withdraw.");
            return;
        }

        const response = await fetch('/Payment/Withdraw', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ amount: amount })
        });

        const result = await response.json();
        if (result.success) {
            alert("Withdrawal request submitted successfully.");
            location.reload();
        } else {
            alert("Withdrawal failed: " + (result.error || "Unknown error"));
        }
    });
</script>
